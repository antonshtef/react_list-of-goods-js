{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_TYPE","App","useState","sortType","setSortType","isReverse","setIsReverse","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACE,GADFA,EAEC,MAFDA,EAGI,SA4BGC,EAAM,WACjB,MAAgCC,mBAASF,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BiB,SAACC,EAAD,GAAqC,IAA3BL,EAA0B,EAA1BA,SAAUE,EAAgB,EAAhBA,UACrCI,EAAa,YAAOD,GAiB1B,OAfIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,EACKI,EAAcM,UAGhBN,EAMcO,CACnBjB,EACA,CAAEI,WAAUE,cAGd,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CACE,WAAYhB,IAAaH,IAE7BoB,QAAS,kBAAMhB,EAAYJ,IAN7B,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,WAAYhB,IAAaH,IAE7BoB,QAAS,kBAAMhB,EAAYJ,IAN7B,4BAWA,wBACEkB,KAAK,SACLD,UAAWE,IAAW,oBACpB,CACE,YAAad,IAEjBe,QAAS,kBAAMd,GAAcD,IAN/B,sBAWEF,GAAYE,IACZ,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAYJ,GACZM,GAAa,IALjB,sBAcJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YC7GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a3fc5580.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_TYPE = {\n  NONE: '',\n  ABC: 'ABC',\n  LENGTH: 'LENGTH',\n};\n\nconst getPreparedGoods = (goods, { sortType, isReverse }) => {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_TYPE.ABC:\n          return good1.localeCompare(good2);\n\n        case SORT_TYPE.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(SORT_TYPE.NONE);\n  const [isReverse, setIsReverse] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer,\n    { sortType, isReverse },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            {\n              'is-light': sortType !== SORT_TYPE.ABC,\n            })}\n          onClick={() => setSortType(SORT_TYPE.ABC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            {\n              'is-light': sortType !== SORT_TYPE.LENGTH,\n            })}\n          onClick={() => setSortType(SORT_TYPE.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            {\n              'is-light': !isReverse,\n            })}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortType || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortType(SORT_TYPE.NONE);\n              setIsReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}